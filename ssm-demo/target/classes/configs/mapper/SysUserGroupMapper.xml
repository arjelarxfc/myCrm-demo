<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.myproject.ssm.crm.dal.SysUserGroupDAO" >
  
  <resultMap id="BaseResultMap" type="com.myproject.ssm.crm.dal.common.object.SysUserGroupDO" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="principal" property="principal" jdbcType="VARCHAR" />
    <result column="incumbent" property="incumbent" jdbcType="VARCHAR" />
  </resultMap>
  
  <resultMap id="ResultMapWithBLOBs" type="com.myproject.ssm.crm.dal.common.object.SysUserGroupDO" extends="BaseResultMap" >
    <result column="remark" property="remark" jdbcType="LONGVARCHAR" />
  </resultMap>
  
  <sql id="Base_Column_List" >
    id, name, principal, incumbent
  </sql>
  
  <sql id="Blob_Column_List" >
    remark
  </sql>
  
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from sys_user_group
    where id = #{id,jdbcType=INTEGER}
  </select>
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from sys_user_group
    where id = #{id,jdbcType=INTEGER}
  </delete>
  
  <insert id="insert" parameterType="com.myproject.ssm.crm.dal.common.object.SysUserGroupDO" >
    insert into sys_user_group (id, name, principal, 
      incumbent, remark)
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{principal,jdbcType=VARCHAR}, 
      #{incumbent,jdbcType=VARCHAR}, #{remark,jdbcType=LONGVARCHAR})
  </insert>
  
  <insert id="insertSelective" parameterType="com.myproject.ssm.crm.dal.common.object.SysUserGroupDO" >
    insert into sys_user_group
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="principal != null" >
        principal,
      </if>
      <if test="incumbent != null" >
        incumbent,
      </if>
      <if test="remark != null" >
        remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="principal != null" >
        #{principal,jdbcType=VARCHAR},
      </if>
      <if test="incumbent != null" >
        #{incumbent,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  
  <update id="updateByPrimaryKeySelective" parameterType="com.myproject.ssm.crm.dal.common.object.SysUserGroupDO" >
    update sys_user_group
    <set >
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="principal != null" >
        principal = #{principal,jdbcType=VARCHAR},
      </if>
      <if test="incumbent != null" >
        incumbent = #{incumbent,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.myproject.ssm.crm.dal.common.object.SysUserGroupDO" >
    update sys_user_group
    set name = #{name,jdbcType=VARCHAR},
      principal = #{principal,jdbcType=VARCHAR},
      incumbent = #{incumbent,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  <update id="updateByPrimaryKey" parameterType="com.myproject.ssm.crm.dal.common.object.SysUserGroupDO" >
    update sys_user_group
    set name = #{name,jdbcType=VARCHAR},
      principal = #{principal,jdbcType=VARCHAR},
      incumbent = #{incumbent,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  <select id="getSysUserGroups" parameterType="string" resultMap="ResultMapWithBLOBs">
  	select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from sys_user_group
    <where>
	    <if test="_parameter != null">
	    	name like CONCAT('%',#{name},'%')
	    </if>
    </where>
  </select>
  
  <delete id="deleteGroups" >
    delete from sys_user_group
    where id in
	<foreach item="item" index="index" collection="list" open="(" separator="," close=")">
		#{item}
    </foreach>
  </delete>
  
</mapper>